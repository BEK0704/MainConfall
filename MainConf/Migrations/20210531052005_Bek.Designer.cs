// <auto-generated />
using System;
using MainConf.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace MainConf.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20210531052005_Bek")]
    partial class Bek
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.3")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("MainConf.Models.Candidates", b =>
                {
                    b.Property<int>("Id_candidate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Created_by")
                        .HasColumnType("text");

                    b.Property<DateTime>("Created_time")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("First_name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Group_id")
                        .HasColumnType("integer");

                    b.Property<int>("Lang_id")
                        .HasColumnType("integer");

                    b.Property<string>("Last_name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Level_id")
                        .HasColumnType("integer");

                    b.Property<string>("Phones")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Photos")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Pnfl")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("S_name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Updated_by")
                        .HasColumnType("text");

                    b.Property<DateTime>("Updated_time")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id_candidate");

                    b.ToTable("Candidates");
                });

            modelBuilder.Entity("MainConf.Models.Main.Admins", b =>
                {
                    b.Property<int>("Id_admin")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Created_by")
                        .HasColumnType("text");

                    b.Property<DateTime>("Created_time")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("First_name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Last_name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Phones")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Photos")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Pnfl")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("S_name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Updated_by")
                        .HasColumnType("text");

                    b.Property<DateTime>("Updated_time")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id_admin");

                    b.ToTable("Admins");
                });

            modelBuilder.Entity("MainConf.Models.Main.Examiners", b =>
                {
                    b.Property<int>("Id_examiner")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Created_by")
                        .HasColumnType("text");

                    b.Property<DateTime>("Created_time")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("First_name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Lang_id")
                        .HasColumnType("integer");

                    b.Property<string>("Last_name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Level_id")
                        .HasColumnType("integer");

                    b.Property<string>("Phones")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Photos")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Pnfl")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("S_name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Updated_by")
                        .HasColumnType("text");

                    b.Property<DateTime>("Updated_time")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id_examiner");

                    b.ToTable("Examiners");
                });

            modelBuilder.Entity("MainConf.Models.Main.Exams", b =>
                {
                    b.Property<int>("Id_exam")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("Cand_id")
                        .HasColumnType("integer");

                    b.Property<int>("Ended")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Ended_time")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("Examiner_id")
                        .HasColumnType("integer");

                    b.Property<int>("Exclude")
                        .HasColumnType("integer");

                    b.Property<int>("Export1_id")
                        .HasColumnType("integer");

                    b.Property<int>("Export2_id")
                        .HasColumnType("integer");

                    b.Property<double>("LastMark")
                        .HasColumnType("double precision");

                    b.Property<double>("Mark1")
                        .HasColumnType("double precision");

                    b.Property<double>("Mark2")
                        .HasColumnType("double precision");

                    b.Property<double>("Mark3")
                        .HasColumnType("double precision");

                    b.Property<int>("Part1_id")
                        .HasColumnType("integer");

                    b.Property<int>("Part2_id")
                        .HasColumnType("integer");

                    b.Property<int>("Part3_id")
                        .HasColumnType("integer");

                    b.Property<string>("Room")
                        .HasColumnType("text");

                    b.Property<int>("SecondEnd")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Started_time")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("Starttime2")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("Starttime3")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id_exam");

                    b.ToTable("Exams");
                });

            modelBuilder.Entity("MainConf.Models.Main.Exports", b =>
                {
                    b.Property<int>("Id_export")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Created_by")
                        .HasColumnType("text");

                    b.Property<DateTime>("Created_time")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("First_name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Lang_id")
                        .HasColumnType("integer");

                    b.Property<string>("Last_name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Level_id")
                        .HasColumnType("integer");

                    b.Property<string>("Phones")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Photos")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Pnfl")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("S_name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Updated_by")
                        .HasColumnType("text");

                    b.Property<DateTime>("Updated_time")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id_export");

                    b.ToTable("Exports");
                });

            modelBuilder.Entity("MainConf.Models.Main.Facelog", b =>
                {
                    b.Property<int>("Id_facelog")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("Created_time")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("Entered")
                        .HasColumnType("integer");

                    b.Property<string>("Images")
                        .HasColumnType("text");

                    b.Property<string>("Ip_address")
                        .HasColumnType("text");

                    b.Property<string>("Mac")
                        .HasColumnType("text");

                    b.Property<string>("Pnfl")
                        .HasColumnType("text");

                    b.Property<string>("Tol")
                        .HasColumnType("text");

                    b.Property<int>("User_type")
                        .HasColumnType("integer");

                    b.HasKey("Id_facelog");

                    b.ToTable("Facelog");
                });

            modelBuilder.Entity("MainConf.Models.Main.Fault", b =>
                {
                    b.Property<int>("Id_fault")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("Can_id")
                        .HasColumnType("integer");

                    b.Property<string>("Caouse")
                        .HasColumnType("text");

                    b.Property<int>("Exm_id")
                        .HasColumnType("integer");

                    b.Property<int>("Exp_id")
                        .HasColumnType("integer");

                    b.Property<string>("Room")
                        .HasColumnType("text");

                    b.HasKey("Id_fault");

                    b.ToTable("Fault");
                });

            modelBuilder.Entity("MainConf.Models.Main.Instruction", b =>
                {
                    b.Property<int>("Id_instruc")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Created_by")
                        .HasColumnType("text");

                    b.Property<DateTime>("Created_time")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Instruct_1")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Instruct_2")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Instruct_3")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Lang_id")
                        .HasColumnType("integer");

                    b.Property<string>("Name_i")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Updated_by")
                        .HasColumnType("text");

                    b.Property<DateTime>("Updated_time")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id_instruc");

                    b.ToTable("Instructions");
                });

            modelBuilder.Entity("MainConf.Models.Main.Konfig", b =>
                {
                    b.Property<int>("Id_konf")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Created_by")
                        .HasColumnType("text");

                    b.Property<DateTime>("Created_time")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("Is_activ")
                        .HasColumnType("integer");

                    b.Property<string>("Names_K")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Updated_by")
                        .HasColumnType("text");

                    b.Property<DateTime>("Updated_time")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id_konf");

                    b.ToTable("Konfig");
                });

            modelBuilder.Entity("MainConf.Models.Main.Languages", b =>
                {
                    b.Property<int>("Id_language")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Created_by")
                        .HasColumnType("text");

                    b.Property<DateTime>("Created_time")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Names_lan")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Updated_by")
                        .HasColumnType("text");

                    b.Property<DateTime>("Updated_time")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id_language");

                    b.ToTable("Languages");
                });

            modelBuilder.Entity("MainConf.Models.Main.Levels", b =>
                {
                    b.Property<int>("Id_level")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Created_by")
                        .HasColumnType("text");

                    b.Property<DateTime>("Created_time")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("Lang_id")
                        .HasColumnType("integer");

                    b.Property<string>("Names_level")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Updated_by")
                        .HasColumnType("text");

                    b.Property<DateTime>("Updated_time")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id_level");

                    b.ToTable("Levels");
                });

            modelBuilder.Entity("MainConf.Models.Main.Log_file", b =>
                {
                    b.Property<int>("Id_logf")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Actions")
                        .HasColumnType("text");

                    b.Property<DateTime>("Created_time")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Ip_address")
                        .HasColumnType("text");

                    b.Property<string>("Mac_address")
                        .HasColumnType("text");

                    b.Property<string>("User_name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id_logf");

                    b.ToTable("Log_file");
                });

            modelBuilder.Entity("MainConf.Models.Main.MarkingS", b =>
                {
                    b.Property<int>("Id_marking")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Communicative")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Gramma")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Level_id")
                        .HasColumnType("integer");

                    b.Property<int>("Local_id")
                        .HasColumnType("integer");

                    b.Property<int>("Mark_id")
                        .HasColumnType("integer");

                    b.Property<string>("Pronunciation")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Speech")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Word")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id_marking");

                    b.ToTable("MarkingS");
                });

            modelBuilder.Entity("MainConf.Models.Main.Marks", b =>
                {
                    b.Property<int>("Id_mark")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Comments")
                        .HasColumnType("text");

                    b.Property<int>("Communicative")
                        .HasColumnType("integer");

                    b.Property<int>("Exam_id")
                        .HasColumnType("integer");

                    b.Property<int>("Gramma")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Markedtime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("Pronunciation")
                        .HasColumnType("integer");

                    b.Property<int>("Speech")
                        .HasColumnType("integer");

                    b.Property<int>("Typem")
                        .HasColumnType("integer");

                    b.Property<int>("Word")
                        .HasColumnType("integer");

                    b.HasKey("Id_mark");

                    b.ToTable("Marks");
                });

            modelBuilder.Entity("MainConf.Models.Main.Part1", b =>
                {
                    b.Property<int>("Id_part1")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("Actived")
                        .HasColumnType("integer");

                    b.Property<string>("Created_by")
                        .HasColumnType("text");

                    b.Property<DateTime>("Created_time")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("Level_id")
                        .HasColumnType("integer");

                    b.Property<string>("Question")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Timeq")
                        .HasColumnType("integer");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Updated_by")
                        .HasColumnType("text");

                    b.Property<DateTime>("Updated_time")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id_part1");

                    b.ToTable("Part1s");
                });

            modelBuilder.Entity("MainConf.Models.Main.Part2", b =>
                {
                    b.Property<int>("Id_part2")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("Actived")
                        .HasColumnType("integer");

                    b.Property<string>("Created_by")
                        .HasColumnType("text");

                    b.Property<DateTime>("Created_time")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("Level_id")
                        .HasColumnType("integer");

                    b.Property<string>("Question")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Timeq")
                        .HasColumnType("integer");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Updated_by")
                        .HasColumnType("text");

                    b.Property<DateTime>("Updated_time")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id_part2");

                    b.ToTable("Part2s");
                });

            modelBuilder.Entity("MainConf.Models.Main.Part3", b =>
                {
                    b.Property<int>("Id_part3")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("Actived")
                        .HasColumnType("integer");

                    b.Property<string>("Created_by")
                        .HasColumnType("text");

                    b.Property<DateTime>("Created_time")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("Level_id")
                        .HasColumnType("integer");

                    b.Property<string>("Question")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Timeq")
                        .HasColumnType("integer");

                    b.Property<string>("Title")
                        .HasColumnType("text");

                    b.Property<string>("Updated_by")
                        .HasColumnType("text");

                    b.Property<DateTime>("Updated_time")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id_part3");

                    b.ToTable("Part3s");
                });

            modelBuilder.Entity("MainConf.Models.Main.PhotoE", b =>
                {
                    b.Property<int>("Id_Photo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("Exam_id")
                        .HasColumnType("integer");

                    b.Property<string>("Part1")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Part2")
                        .HasColumnType("text");

                    b.Property<string>("Part3")
                        .HasColumnType("text");

                    b.HasKey("Id_Photo");

                    b.ToTable("PhotoE");
                });

            modelBuilder.Entity("MainConf.Models.Main.Viloyat", b =>
                {
                    b.Property<int>("Id_viloyat")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Created_by")
                        .HasColumnType("text");

                    b.Property<DateTime>("Created_time")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Names_V")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Updated_by")
                        .HasColumnType("text");

                    b.Property<DateTime>("Updated_time")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id_viloyat");

                    b.ToTable("Viloyat");
                });
#pragma warning restore 612, 618
        }
    }
}
